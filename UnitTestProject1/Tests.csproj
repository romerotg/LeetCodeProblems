<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\packages\MSTest.TestAdapter.1.3.2\build\net45\MSTest.TestAdapter.props" Condition="Exists('..\packages\MSTest.TestAdapter.1.3.2\build\net45\MSTest.TestAdapter.props')" />
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{DC32539B-907B-46FA-BA57-0F1511D34936}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Tests</RootNamespace>
    <AssemblyName>UnitTestProject1</AssemblyName>
    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">15.0</VisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
    <ReferencePath>$(ProgramFiles)\Common Files\microsoft shared\VSTT\$(VisualStudioVersion)\UITestExtensionPackages</ReferencePath>
    <IsCodedUITest>False</IsCodedUITest>
    <TestProjectType>UnitTest</TestProjectType>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.VisualStudio.TestPlatform.TestFramework, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\packages\MSTest.TestFramework.1.3.2\lib\net45\Microsoft.VisualStudio.TestPlatform.TestFramework.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.VisualStudio.TestPlatform.TestFramework.Extensions, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\packages\MSTest.TestFramework.1.3.2\lib\net45\Microsoft.VisualStudio.TestPlatform.TestFramework.Extensions.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Array and String\Conclusion\TestMoveZeroesQ.cs" />
    <Compile Include="Array and String\Conclusion\TestPascalTriangleII.cs" />
    <Compile Include="Array and String\Conclusion\TestRemoveDuplicatesfromSortedArray.cs" />
    <Compile Include="Array and String\Conclusion\TestReverseWordsinaString.cs" />
    <Compile Include="Array and String\Conclusion\TestReverseWordsinaStringIII.cs" />
    <Compile Include="Array and String\Conclusion\TestRotateArray.cs" />
    <Compile Include="Array and String\Introduction to 2D Array\TestDiagonalTransverse.cs" />
    <Compile Include="Array and String\Introduction to 2D Array\TestPascalTriangle.cs" />
    <Compile Include="Array and String\Introduction to 2D Array\TestSpiralMatrix.cs" />
    <Compile Include="Array and String\Introduction to Array\TestFindPivotIndex.cs" />
    <Compile Include="Array and String\Introduction to Array\TestLargestNumberAtLeastTwiceOfOthers.cs" />
    <Compile Include="Array and String\Introduction to Array\TestPlusOneQ.cs" />
    <Compile Include="Array and String\Introduction to String\TestLongestCommonPrefixQ.cs" />
    <Compile Include="Array and String\Introduction to String\TestAddBinaryQ.cs" />
    <Compile Include="Array and String\Introduction to String\TestImplementStrStr.cs" />
    <Compile Include="Array and String\Two-Pointer Technique\TestArrayPartitionI.cs" />
    <Compile Include="Array and String\Two-Pointer Technique\TestMaxConsecutiveOnes.cs" />
    <Compile Include="Array and String\Two-Pointer Technique\TestMinimumSizeSubarraySum.cs" />
    <Compile Include="Array and String\Two-Pointer Technique\TestRemoveElementQ.cs" />
    <Compile Include="Array and String\Two-Pointer Technique\TestReverseStringQ.cs" />
    <Compile Include="Array and String\Two-Pointer Technique\TestTwoSumII.cs" />
    <Compile Include="Binary Search\Background\TestBinarySearch.cs" />
    <Compile Include="Binary Search\TemplateI\TestSqrtX.cs" />
    <Compile Include="Binary Tree\Conclusion\TestLowestCommonAncestorofaBinaryTree.cs" />
    <Compile Include="Binary Tree\Conclusion\TestPopulatingNextRightPointersinEachNode.cs" />
    <Compile Include="Binary Tree\Conclusion\TestPopulatingNextRightPointersinEachNodeII.cs" />
    <Compile Include="Binary Tree\Conclusion\TestSerializeandDeserializeBinaryTree.cs" />
    <Compile Include="Binary Tree\Solve Problems Recursively\TestMaximumDepthofBinaryTree.cs" />
    <Compile Include="Binary Tree\Solve Problems Recursively\TestPathSum.cs" />
    <Compile Include="Binary Tree\Solve Problems Recursively\TestSymmetricTree.cs" />
    <Compile Include="Binary Tree\Traverse A Tree\TestBinaryTreeInorderTraversal.cs" />
    <Compile Include="Binary Tree\Traverse A Tree\TestBinaryTreeLevelTraversal.cs" />
    <Compile Include="Binary Tree\Traverse A Tree\TestBinaryTreePostorderTraversal.cs" />
    <Compile Include="Binary Tree\Traverse A Tree\TestBinaryTreePreorderTraversal.cs" />
    <Compile Include="Hash Table\Conclusion\TestFourSumII.cs" />
    <Compile Include="Hash Table\Conclusion\TestJewelsandStones.cs" />
    <Compile Include="Hash Table\Conclusion\TestLongestSubstringWithoutRepeatingCharacters.cs" />
    <Compile Include="Hash Table\Conclusion\TestTopKFrequentElements.cs" />
    <Compile Include="Hash Table\Practical Application - Design the Key\TestGroupAnagramsQ.cs" />
    <Compile Include="Hash Table\Practical Application - Design the Key\TestValidSudoku.cs" />
    <Compile Include="Hash Table\Practical Application - Hash Map\TestContainsDuplicateII.cs" />
    <Compile Include="Hash Table\Practical Application - Hash Map\TestFirstUniqueCharacterinaString.cs" />
    <Compile Include="Hash Table\Practical Application - Hash Map\TestIntersectionofTwoArraysII.cs" />
    <Compile Include="Hash Table\Practical Application - Hash Map\TestIsomorphicStrings.cs" />
    <Compile Include="Hash Table\Practical Application - Hash Map\TestMinimumIndexSumofTwoLists.cs" />
    <Compile Include="Hash Table\Practical Application - Hash Map\TestTwoSumQ.cs" />
    <Compile Include="Hash Table\Practical Application - Hash Set\TestContainsDuplicateQ.cs" />
    <Compile Include="Hash Table\Practical Application - Hash Set\TestHappyNumber.cs" />
    <Compile Include="Hash Table\Practical Application - Hash Set\TestIntersectionofTwoArrays.cs" />
    <Compile Include="Hash Table\Practical Application - Hash Set\TestSingleNumberQ.cs" />
    <Compile Include="Linked List\Classic Prolems\TestOddEvenLinkedList.cs" />
    <Compile Include="Linked List\Classic Prolems\TestPalindromeLinkedList.cs" />
    <Compile Include="Linked List\Classic Prolems\TestRemoveLinkedListElements.cs" />
    <Compile Include="Linked List\Classic Prolems\TestReverseLinkedList.cs" />
    <Compile Include="Linked List\Conclusion\TestAddTwoNumbersQ.cs" />
    <Compile Include="Linked List\Conclusion\TestFlattenaMultilevelDoublyLinkedList.cs" />
    <Compile Include="Linked List\Conclusion\TestMergeTwoSortedLists.cs" />
    <Compile Include="Linked List\Conclusion\TestRotateList.cs" />
    <Compile Include="Linked List\Doubly Linked List\TestMyLinkedList.cs" />
    <Compile Include="Linked List\Singly Linked List\TestMyLinkedList.cs" />
    <Compile Include="Linked List\Two Pointer Technique\TestIntersectionofTwoLinkedLists.cs" />
    <Compile Include="Linked List\Two Pointer Technique\TestLinkedListCycle.cs" />
    <Compile Include="Linked List\Two Pointer Technique\TestLinkedListCycleII.cs" />
    <Compile Include="Linked List\Two Pointer Technique\TestRemoveNthNodeFromEndofList.cs" />
    <Compile Include="Questões Soltas\TestTextJustification.cs" />
    <Compile Include="Queue and Stack\Conclusion\TestDecodeStringQ.cs" />
    <Compile Include="Queue and Stack\Conclusion\TestFloodFillQ.cs" />
    <Compile Include="Queue and Stack\Conclusion\TestKeysandRooms.cs" />
    <Compile Include="Queue and Stack\Conclusion\TestMatrix01.cs" />
    <Compile Include="Queue and Stack\Conclusion\TestMyStack.cs" />
    <Compile Include="Queue and Stack\Conclusion\TestMyQueue.cs" />
    <Compile Include="Queue and Stack\Queue and BFS\TestNumberofIslands.cs" />
    <Compile Include="Queue and Stack\Queue and BFS\TestOpentheLock.cs" />
    <Compile Include="Queue and Stack\Queue and BFS\TestPerfectSquares.cs" />
    <Compile Include="Queue and Stack\Queue\TestMyCircularQueue.cs" />
    <Compile Include="Queue and Stack\Stack and DFS\TestBinaryTreeInorderTraversal.cs" />
    <Compile Include="Queue and Stack\Stack and DFS\TestNumberofIslands.cs" />
    <Compile Include="Queue and Stack\Stack and DFS\TestTargetSum.cs" />
    <Compile Include="Queue and Stack\Stack\TestDailyTemperaturesQ.cs" />
    <Compile Include="Queue and Stack\Stack\TestEvaluateReversePolishNotation.cs" />
    <Compile Include="Queue and Stack\Stack\TestMinStack.cs" />
    <Compile Include="Queue and Stack\Stack\TestValidParentheses.cs" />
    <Compile Include="TestQuestion1.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\LeetCodeProblems\LeetCodeProblems.csproj">
      <Project>{d78a8923-3ce0-4ffa-bb3a-6c4d5c1f9af5}</Project>
      <Name>LeetCodeProblems</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets" Condition="Exists('$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets')" />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\MSTest.TestAdapter.1.3.2\build\net45\MSTest.TestAdapter.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\MSTest.TestAdapter.1.3.2\build\net45\MSTest.TestAdapter.props'))" />
    <Error Condition="!Exists('..\packages\MSTest.TestAdapter.1.3.2\build\net45\MSTest.TestAdapter.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\MSTest.TestAdapter.1.3.2\build\net45\MSTest.TestAdapter.targets'))" />
  </Target>
  <Import Project="..\packages\MSTest.TestAdapter.1.3.2\build\net45\MSTest.TestAdapter.targets" Condition="Exists('..\packages\MSTest.TestAdapter.1.3.2\build\net45\MSTest.TestAdapter.targets')" />
</Project>